% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tuneThreshold.R
\name{tuneThreshold}
\alias{tuneThreshold}
\title{Tunes adjacency matrix cutoff threshold}
\usage{
tuneThreshold(data, ugene, cutoffs = NULL, showPareto = TRUE)
}
\arguments{
\item{data}{Required. Same data as provided to inferNetwork().}

\item{ugene}{Required. Output of the inferNetwork() function.}

\item{cutoffs}{Optional. When not provided, edges are removed in two ways. Both
cases start with a sparse network, one that has at least one
connection/edge per column of the network matrix. This ensures that for each
node, at least one node is used as input to the model.
\itemize{
    \item Column-wise: The sparsest network is that with the maximum of each
    column as its only connections. Edges are incrementally added
    by including edges with the next highest importance score for each column.
    This continues until each column has exactly one missing edge.
    \item Step-wise: Let \eqn{n} be the number of genes. Start with taking
    the maximum \eqn{n} elements as edges. Add more edges in descending order
    of the importance score until there is at least one connection per column.
    Edges are incrementally added by including edges with the
    next highest importance score over the entire matrix..
}
If provided, the cutoffs
will be taken as provided. They must be between 0 and 1 exclusive.}

\item{showPareto}{Optional. If TRUE (default), shows a plot of the mean
squared residual error of the fitted random forests for all nodes, versus the
number of connections in the network. The ideal network complexity should be
the smallest number of connections at which the error drops steeply.}
}
\value{
An object of class "ugene.analysis" that contains the following:
\itemize{
    \item step.errors - a vector of numerics, the average mean squared error
    of the random forests used for prediction, in the order of sparsest to
    more complex networks.
    \item col.errors - a vector of numerics, same as step.errors but constructed
    with the masks described above as column-wise.
    \item step.masks - a list of matrices, the masks constructed by the
    step-wise method.
    \item col.masks - a list of matrices, the masks constructed by the column-wise
    method.
}
}
\description{
Performs a search over possible cutoff thresholds \eqn{\epsilon}. All edges
with an importance score below \eqn{\epsilon} are removed and the random
forests are retrained without those connections.
}
\examples{
\dontrun{
   ugene <- inferNetwork(Repressilator, mtry=3L)
   result <- tuneThreshold(Repressilator, ugene)
   # take a look at network corresponding to the third and seventh
   # step-wise mask (both has drops in mse)
   inferNetwork(Repressilator, mask=result$step.masks[[3]], showPlot=TRUE)
   inferNetwork(Repressilator, mask=result$step.masks[[7]], showPlot=TRUE)
}

}
